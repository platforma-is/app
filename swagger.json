{
  "components": {
    "examples": {},
    "headers": {},
    "parameters": {},
    "requestBodies": {},
    "responses": {},
    "schemas": {
      "SucessScreen": {},
      "Result.DefaultSelection_Prisma.FormPayload_": {
        "properties": {
          "customUrlError": {
            "type": "string",
            "nullable": true
          },
          "customUrlSuccess": {
            "type": "string",
            "nullable": true
          },
          "successScreen": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SucessScreen"
              }
            ],
            "nullable": true
          },
          "emailNotificationMails": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "emailNotification": {
            "type": "boolean"
          },
          "spamProtected": {
            "type": "boolean"
          },
          "folder": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean"
          },
          "keys": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "authorId": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "title": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        },
        "required": [
          "customUrlError",
          "customUrlSuccess",
          "successScreen",
          "emailNotificationMails",
          "emailNotification",
          "spamProtected",
          "folder",
          "active",
          "keys",
          "authorId",
          "updatedAt",
          "createdAt",
          "title",
          "id"
        ],
        "type": "object"
      },
      "Form": {
        "$ref": "#/components/schemas/Result.DefaultSelection_Prisma.FormPayload_",
        "description": "Model Form"
      },
      "Partial_Omit_Form.id-or-createdAt-or-updatedAt-or-authorId__": {
        "properties": {
          "title": {
            "type": "string"
          },
          "keys": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "active": {
            "type": "boolean"
          },
          "folder": {
            "type": "string",
            "nullable": true
          },
          "spamProtected": {
            "type": "boolean"
          },
          "emailNotification": {
            "type": "boolean"
          },
          "emailNotificationMails": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "successScreen": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SucessScreen"
              }
            ],
            "nullable": true
          },
          "customUrlSuccess": {
            "type": "string",
            "nullable": true
          },
          "customUrlError": {
            "type": "string",
            "nullable": true
          }
        },
        "type": "object",
        "description": "Make all properties in T optional"
      },
      "TSettings": {
        "$ref": "#/components/schemas/Partial_Omit_Form.id-or-createdAt-or-updatedAt-or-authorId__"
      },
      "JsonObject": {
        "properties": {},
        "type": "object",
        "description": "From https://github.com/sindresorhus/type-fest/\r\nMatches a JSON object.\r\nThis type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from."
      },
      "JsonArray": {
        "description": "From https://github.com/sindresorhus/type-fest/\r\nMatches a JSON array.",
        "properties": {},
        "type": "object",
        "additionalProperties": false
      },
      "JsonValue": {
        "anyOf": [
          {
            "type": "string"
          },
          {
            "type": "number",
            "format": "double"
          },
          {
            "type": "boolean"
          },
          {
            "$ref": "#/components/schemas/JsonObject"
          },
          {
            "$ref": "#/components/schemas/JsonArray"
          }
        ],
        "nullable": true,
        "description": "From https://github.com/sindresorhus/type-fest/\r\nMatches any valid JSON value."
      },
      "Result.DefaultSelection_Prisma.ResponsePayload_": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/JsonValue"
          },
          "formId": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string"
          }
        },
        "required": ["data", "formId", "updatedAt", "createdAt", "id"],
        "type": "object"
      },
      "Response": {
        "$ref": "#/components/schemas/Result.DefaultSelection_Prisma.ResponsePayload_",
        "description": "Model Response"
      },
      "Nullable_Form_": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Form"
          }
        ],
        "nullable": true
      },
      "Partial_Form_": {
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "authorId": {
            "type": "string"
          },
          "keys": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "active": {
            "type": "boolean"
          },
          "folder": {
            "type": "string",
            "nullable": true
          },
          "spamProtected": {
            "type": "boolean"
          },
          "emailNotification": {
            "type": "boolean"
          },
          "emailNotificationMails": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "successScreen": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SucessScreen"
              }
            ],
            "nullable": true
          },
          "customUrlSuccess": {
            "type": "string",
            "nullable": true
          },
          "customUrlError": {
            "type": "string",
            "nullable": true
          }
        },
        "type": "object",
        "description": "Make all properties in T optional"
      },
      "Nullable_any_": {
        "properties": {
          "image": {
            "type": "string",
            "nullable": true
          },
          "emailVerified": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "image",
          "emailVerified",
          "email",
          "updatedAt",
          "createdAt",
          "id",
          "name"
        ],
        "type": "object",
        "nullable": true
      }
    },
    "securitySchemes": {}
  },
  "info": {
    "title": "platforma-backend",
    "version": "1.0.0",
    "description": "Platforma Backend Package",
    "license": {
      "name": "ISC"
    },
    "contact": {
      "name": "Filat Astakhov ",
      "url": "ph1l74"
    }
  },
  "openapi": "3.0.0",
  "paths": {
    "/forms/{formId}/settings": {
      "patch": {
        "operationId": "UpdateSettings",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Form"
                }
              }
            }
          }
        },
        "tags": ["Forms"],
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "formId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TSettings"
              }
            }
          }
        }
      },
      "get": {
        "operationId": "GetSettings",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TSettings"
                }
              }
            }
          }
        },
        "tags": ["Forms"],
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "formId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/forms/{formId}/responses": {
      "post": {
        "operationId": "AddResponse",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "tags": ["Forms"],
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "formId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {}
            }
          }
        }
      },
      "get": {
        "operationId": "GetResponses",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Response"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": ["Forms"],
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "formId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/forms": {
      "get": {
        "operationId": "GetForms",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Form"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": ["Forms"],
        "security": [],
        "parameters": []
      },
      "post": {
        "operationId": "AddForm",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Form"
                }
              }
            }
          }
        },
        "tags": ["Forms"],
        "security": [],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "title": {
                    "type": "string"
                  }
                },
                "required": ["title"],
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/forms/{formId}": {
      "get": {
        "operationId": "GetFormById",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Nullable_Form_"
                }
              }
            }
          }
        },
        "tags": ["Forms"],
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "formId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "operationId": "DeleteForm",
        "responses": {
          "201": {
            "description": "Deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Form"
                }
              }
            }
          }
        },
        "tags": ["Forms"],
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "formId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "patch": {
        "operationId": "UpdateForm",
        "responses": {
          "201": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Form"
                }
              }
            }
          }
        },
        "tags": ["Forms"],
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "formId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Partial_Form_"
              }
            }
          }
        }
      }
    },
    "/forms/{formId}/responses/{responseId}": {
      "delete": {
        "operationId": "DeleteResponse",
        "responses": {
          "201": {
            "description": "Deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        },
        "tags": ["Forms"],
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "formId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "responseId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/users/{id}": {
      "get": {
        "operationId": "GetUserDataById",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Nullable_any_"
                }
              }
            }
          }
        },
        "tags": ["Users"],
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "servers": [
    {
      "url": "http://localhost:3001/"
    }
  ]
}
